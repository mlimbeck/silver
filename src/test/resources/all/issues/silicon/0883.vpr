field f: Int

method foo(x: Ref, xs: Set[Ref])
    requires forall r: Ref :: { r in xs } r in xs ==> acc(r.f)
{
    var b: Bool
    inhale acc(x.f, 1/2)
    if (b) {
        inhale acc(x.f, 1/2)
    } else {
        inhale acc(x.f, 1/2)
    }

    assert acc(x.f)
}